//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while(t-- > 0)
        {
            
            String S = read.readLine().trim();
            Solution ob = new Solution();
            System.out.println(ob.findMinInsertions(S));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    int findMinInsertions(String S){
        // code here
        int n = S.length() , m = S.length() ;
        int[][] dp = new int[n+1][m+1] ;
        for(int i = 0 ; i<n+1 ; i++){
            for(int j = 0 ; j<m+1 ; j++){
                if(i == 0 || j == 0){
                    dp[i][j] = 0 ;
                }
            }
        }
       String str2 = "" ;
       for(int i = n-1 ; i>=0 ; i--){
           str2 = str2 + S.charAt(i) ;
       }
        for(int i = 1 ; i<n+1 ; i++){
            for(int j = 1 ; j<m+1 ; j++){
                if(S.charAt(i-1) == str2.charAt(j-1)){
                    dp[i][j] = 1 + dp[i-1][j-1] ;
                }
                else{
                    dp[i][j] = Math.max(dp[i-1][j] , dp[i][j-1]) ;
                }
            }
        }
        int ans = n - dp[n][m] ;
        return ans ;
    }
}
