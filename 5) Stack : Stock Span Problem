//{ Driver Code Starts
import java.util.*;
import java.io.*;
import java.lang.*;

class gfg
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int n =sc.nextInt();
            int a[] = new int[n];
            
            int i = 0;
            for(i = 0; i < n; i++)
              a[i] = sc.nextInt();
              
            int[] s = new Solution().calculateSpan(a, n);
            
            for(i = 0; i < n; i++)
            {
                System.out.print(s[i] + " ");
            }
            
            System.out.println();
        }
    }
    
    
    
}
// } Driver Code Ends

class Pair{
    int key ;
    int value ;
    public Pair(int key , int value){
        this.key = key ;
        this.value = value ;
    }
}

class Solution
{
    //Function to calculate the span of stockâ€™s price for all n days.
    public static int[] calculateSpan(int price[], int n)
    {
        // Your code here
        int count =  1 ;
        int[] result = new int[n] ;
        Stack<Pair> stack = new Stack<>() ;
        for(int i = 0 ; i<n ; i++){
            if(stack.isEmpty()){
                result[i] = 1 ;
            }
            else if(!stack.isEmpty() && stack.peek().value > price[i] ){
                result[i] = i - stack.peek().key ;
            }
            else if(!stack.isEmpty() && stack.peek().value <= price[i]){
                while(!stack.isEmpty() && stack.peek().value <= price[i]){
                    stack.pop() ;
                    count++ ;
                }
                if(stack.isEmpty()){
                    result[i] = count ;
                }else{
                    result[i] = i - stack.peek().key ;
                }
            }
            stack.push(new Pair(i , price[i])) ;
        }
        return result ;
    }
    
}
