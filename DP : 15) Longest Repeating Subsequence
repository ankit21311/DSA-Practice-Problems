Solution
{
    public int LongestRepeatingSubsequence(String str)
    {
        // code here
        int n = str.length() , m = str.length() ;
        int[][] dp = new int[n+1][m+1] ;
        for(int i = 0 ; i<n+1 ; i++){
            for(int j = 0 ; j<m+1 ; j++){
                if( i == 0 || j == 0){
                    dp[i][j] = 0 ;
                }
            }
        }
        String str1 = str ;
        for(int i = 1 ; i<n+1 ; i++){
            for(int j = 1 ; j<m+1 ; j++){
                if((str.charAt(i-1) == str1.charAt(j-1)) && i != j ){
                    dp[i][j] = 1 + dp[i-1][j-1] ;
                }else{
                    dp[i][j] = Math.max(dp[i-1][j] , dp[i][j-1]) ;
                }
            }
        }
        return dp[n][m] ;
    }
}
